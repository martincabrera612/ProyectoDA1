@page "/login"
@using BusinessLogic
@using BusinessLogic.Exceptions
@inject SessionLogic SessionLogic
@inject NavigationManager NavigationManager

<h1>Login</h1>

<form @onsubmit="HandleLogin">
    <div class="form-group">
        <label for="Email">Email:</label>
        <input id="Email" class="form-control" @bind="_email"/>
    </div>

    <br/>
    <div class="form-group">
        <label for="Password">Password:</label>
        <input id="Password" type="password" class="form-control" @bind="_password"/>
    </div>
    
    <br/>
    <button type="submit" class="btn btn-primary">Login</button>
</form>

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <br/>
    <div class="alert alert-danger" role="alert">
        @_errorMessage
    </div>
}

@if (_showSuccessMessage)
{
    <br/>
    <div class="alert alert-success" role="alert">
        Login successful! Redirecting...
    </div>
}

@code {
    private string _email = string.Empty;
    private string _password = string.Empty;
    
    private string? _errorMessage;
    private bool _showSuccessMessage;

    protected override void OnInitialized()
    {
        _email = string.Empty;
        _password = string.Empty;
    }
    
    private async Task HandleLogin()
    {
        try
        {
            SessionLogic.Login(_email, _password);

            _showSuccessMessage = true;
            await Task.Delay(2000);
            NavigationManager.NavigateTo("/dashboard", true);
            ResetValues();
        }
        catch (BusinessLogicException ex)
        {
            _errorMessage = ex.Message;
        }
    }

    private void ResetValues()
    {
        _email = string.Empty;
        _password = string.Empty;
        _errorMessage = null;
    }

}